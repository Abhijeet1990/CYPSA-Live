<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>